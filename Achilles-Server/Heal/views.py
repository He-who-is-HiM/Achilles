# -*- encoding:utf-8 -*-

from django.shortcuts import render_to_response
from django.http import HttpResponse

from AchillesServer.AchillesServer import AchillesServer

from ConfigParser import ConfigParser

achilles = None
config_file = './AchillesServer/Config.ini'


def index(request):
    global config_file
    configuration = ConfigParser()
    configuration.read(config_file)
    res = {section: dict(configuration.items(section))
           for section in configuration.sections()}
    for _ in MODULES:
        res['Modules'][_] = res['Modules'][_] == 'ON'
    return render_to_response('index.html', res)


def config(request):
    global achilles
    if achilles is not None:
        return HttpResponse('Fail')
    post = dict(request.POST)
    post = {_: post[_][0] for _ in post}
    configuration = CONFIG_TEMPLATE % post
    open(config_file, 'w').write(configuration)

    import time
    # 如果太快返回OK，可能数据还未真的写到磁盘上，启动会出问题
    # 上一个版本出现过这个问题，当时只能靠运气
    while open(config_file).read() != configuration:
        time.sleep(0.2)
    return HttpResponse('OK')


def start(request):
    global achilles
    if achilles is None:
        achilles = AchillesServer()
        achilles.start()
    else:
        return HttpResponse('Already started')
    return HttpResponse('Started')


def stop(request):
    global achilles
    if achilles is not None:
        achilles.exit()
        achilles = None
    else:
        return HttpResponse('Not running')
    return HttpResponse('Stopped')


def result(request):
    try:
        log = open('./AchillesServer/extra/log/server.log').read().strip('\n')
    except:
        log = ''
    t = {'log': [{'msg': l.strip('\n').split('\n'),
                  'color': '#f00' if ('[INFO]' in l or '[ERROR]' in l) else '#000'}
                 for l in log.strip('\x00').split('\x00')],
         'script': ('' if achilles is None else
                    'window.setTimeout(refresh, 10000);')}

    return render_to_response('result.html', t)

# ################ This is config file templates ################

MODULES = ['click_proxy',
           'xss_scanner',
           'sql_scanner', ]
module_switchs = '\n'.join(
    ['m = %(m)'.replace('m', _) + 's'
     for _ in MODULES])

CONFIG_TEMPLATE = """
# Configuration file for Achilles scanner.
# This is a file generated by Server automatically,
# Do not modify.

[Communicate]
server_addr = %(server_addr)s
clients_addr = %(clients_addr)s

[Scanner]
init_url = %(init_url)s
cookie = %(cookie)s
filetype = %(filetype)s
allow_domain = %(allow_domain)s
depth_limit = %(depth_limit)s
proxy_port = %(proxy_port)s

[Modules]
""" + module_switchs + '\n'
